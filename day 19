//integer to roman
  class Solution(object):
    def romanToInt(self, s):
        d = {'I': 1,'V': 5,'X': 10,'L': 50,'C': 100,'D': 500,'M': 1000}
        num=0
        i=len(s)-1
        while(i>=0):
            if(i>0):
                if s[i]=="V" and s[i-1]=="I":
                        num+=4
                        i-=1
                elif s[i]=="X" and s[i-1]=="I":
                        num+=9
                        i-=1
                elif s[i]=="L" and s[i-1]=="X":
                        num+=40
                        i-=1
                elif s[i]=="C" and s[i-1]=="X":
                        num+=90
                        i-=1
                elif s[i]=="D" and  s[i-1]=="C":
                        num+=400
                        i-=1
                elif s[i]=="M" and s[i-1]=="C":
                        num+=900
                        i-=1
                else:
                    num+=d[s[i]]
            else:
                num+=d[s[i]]

            i-=1
        return num
// inner most parenthsesis
class Solution(object):
    def maxDepth(self, s):
        class Solution:
    def maxDepth(self, s):
        count = 0
        maxnum = 0
        for i in s:
            if i == "(":
                count += 1
                if maxnum < count:
                    maxnum = count
            if i == ")":
                count -= 1
        return(maxnum)
